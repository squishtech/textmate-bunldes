<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>changed</key>
	<dict>
		<key>repository.language.patterns</key>
		<array>
			<dict>
				<key>begin</key>
				<string>(?=&lt;&lt;&lt;\s*(HTML|XML|SQL)\s*$)</string>
				<key>end</key>
				<string>(?!&lt;?&lt;&lt;\s*(HTML|XML|SQL)\s*$)</string>
				<key>name</key>
				<string>string.unquoted.heredoc.php</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>(&lt;&lt;&lt;)\s*(HTML)\s*$\n?</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.embedded.begin.php</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.heredoc.php</string>
							</dict>
						</dict>
						<key>contentName</key>
						<string>text.html</string>
						<key>end</key>
						<string>^(HTML)(;?)$\n?</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.embedded.end.php</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.heredoc.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.php</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.embedded.html</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>text.html.basic</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#interpolation</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(&lt;&lt;&lt;)\s*(XML)\s*$\n?</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.embedded.begin.php</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.heredoc.php</string>
							</dict>
						</dict>
						<key>contentName</key>
						<string>text.xml</string>
						<key>end</key>
						<string>^(XML)(;?)$\n?</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.embedded.end.php</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.heredoc.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.php</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.embedded.xml</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>text.xml</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#interpolation</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>(&lt;&lt;&lt;)\s*(SQL)\s*$\n?</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.embedded.begin.php</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.heredoc.php</string>
							</dict>
						</dict>
						<key>contentName</key>
						<string>source.sql</string>
						<key>end</key>
						<string>^(SQL)(;?)$\n?</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.embedded.end.php</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.heredoc.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.php</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.embedded.sql</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.sql</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#interpolation</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>\s+$</string>
				<key>name</key>
				<string>invalid.trailing-whitespace</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>/\*\*(?:#@\+)?\s*$</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.php</string>
					</dict>
				</dict>
				<key>comment</key>
				<string>This now only highlights a docblock if the first line contains only /**
								- this is to stop highlighting everything as invalid when people do comment banners with /******** ...
								- Now matches /**#@+ too - used for docblock templates: http://manual.phpdoc.org/HTMLframesConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html#basics.docblocktemplate</string>
				<key>end</key>
				<string>\*/</string>
				<key>name</key>
				<string>comment.block.documentation.phpdoc.php</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#php_doc</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>/\*</string>
				<key>captures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.php</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\*/</string>
				<key>name</key>
				<string>comment.block.php</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.php</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(//).*?($\n?|(?=\?&gt;))</string>
				<key>name</key>
				<string>comment.line.double-slash.php</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.comment.php</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(#).*?($\n?|(?=\?&gt;))</string>
				<key>name</key>
				<string>comment.line.number-sign.php</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>^\s*(interface)\s+([a-zA-Z0-9_]+)\s*(extends)?\s*</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.interface.php</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.interface.php</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.extends.php</string>
					</dict>
				</dict>
				<key>end</key>
				<string>$</string>
				<key>name</key>
				<string>meta.interface.php</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>match</key>
						<string>[a-zA-Z0-9_]+</string>
						<key>name</key>
						<string>entity.other.inherited-class.php</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>^\s*(abstract|final)?\s*(class)\s+([a-zA-Z0-9_]+)\s*</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.abstract.php</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>storage.type.class.php</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.class.php</string>
					</dict>
				</dict>
				<key>end</key>
				<string>$</string>
				<key>name</key>
				<string>meta.class.php</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>storage.modifier.extends.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>entity.other.inherited-class.php</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(extends)\s+([a-zA-Z0-9_]+)\s*</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>(implements)\s+([a-zA-Z0-9_]+)\s*</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>storage.modifier.implements.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>support.class.implements.php</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=\s*\bextends)|$</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>captures</key>
								<dict>
									<key>1</key>
									<dict>
										<key>name</key>
										<string>support.class.implements.php</string>
									</dict>
								</dict>
								<key>match</key>
								<string>,\s*([a-zA-Z0-9_]+)\s*</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(break|c(ase|ontinue)|d(e(clare|fault)|ie|o)|e(lse(if)?|nd(declare|for(each)?|if|switch|while)|xit)|for(each)?|if|return|switch|use|while)\b</string>
				<key>name</key>
				<string>keyword.control.php</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?i)\b((?:require|include)(?:_once)?)\b\s*</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.import.include.php</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(?=\s|;|$)</string>
				<key>name</key>
				<string>meta.include.php</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#language</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(catch|try|throw|exception)|([a-zA-Z_]*Exception)\b</string>
				<key>name</key>
				<string>keyword.control.exception.php</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(?:^\s*)((?:(?:final|abstract|public|private|protected|static)\s+)*)(function)(?:\s+|(\s*&amp;\s*))(?:(__(?:call|(?:con|de)struct|get|(?:is|un)?set|tostring|clone|set_state|sleep|wakeup|autoload))|([a-zA-Z0-9_]+))\s*(\()</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.php</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.php</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.reference.php</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>support.function.magic.php</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.php</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.php</string>
					</dict>
				</dict>
				<key>contentName</key>
				<string>meta.function.arguments.php</string>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.php</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.function.php</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>(?x)
									\s*(array) # Typehint
									\s*(&amp;)? 					# Reference
									\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*) # The variable name
									\s*(=)	# A default value
									\s*(array)\s*(\()
									</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>storage.type.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>storage.modifier.php</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>variable.other.php</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.variable.php</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.assignment.php</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>support.function.construct.php</string>
							</dict>
							<key>7</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.array.begin.php</string>
							</dict>
						</dict>
						<key>contentName</key>
						<string>meta.array.php</string>
						<key>end</key>
						<string>\)</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.array.end.php</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.function.argument.array.php</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#strings</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#numbers</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>storage.type.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>storage.modifier.php</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>variable.other.php</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.variable.php</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.assignment.php</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>constant.language.php</string>
							</dict>
							<key>7</key>
							<dict>
								<key>name</key>
								<string>invalid.illegal.non-null-typehinted.php</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(?x)
									\s*(array) # Typehint
									\s*(&amp;)? 					# Reference
									\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*) # The variable name
									(?:
										\s*(=)	# A default value
										\s*(?i:
											(NULL)
											|
											(\S.*?)
											)?
									)?
									\s*(?=,|\)) # A closing parentheses (end of argument list) or a comma
									</string>
						<key>name</key>
						<string>meta.function.argument.array.php</string>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>support.class.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>storage.modifier.php</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>variable.other.php</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.variable.php</string>
							</dict>
							<key>5</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.assignment.php</string>
							</dict>
							<key>6</key>
							<dict>
								<key>name</key>
								<string>constant.language.php</string>
							</dict>
							<key>7</key>
							<dict>
								<key>name</key>
								<string>invalid.illegal.non-null-typehinted.php</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(?x)
									\s*([A-Za-z_][A-Za-z_0-9]*) # Typehinted class name
									\s*(&amp;)? 					# Reference
									\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*) # The variable name
									(?:
										\s*(=)	# A default value
										\s*(?i:
											(NULL)
											|
											(\S.*?)
											)?
									)?
									\s*(?=,|\)) # A closing parentheses (end of argument list) or a comma
									</string>
						<key>name</key>
						<string>meta.function.argument.typehinted.php</string>
					</dict>
					<dict>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>storage.modifier.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>variable.other.php</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.variable.php</string>
							</dict>
						</dict>
						<key>match</key>
						<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)\s*(?=,|\))</string>
						<key>name</key>
						<string>meta.function.argument.no-default.php</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>(\s*&amp;)?\s*((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)(?:\s*(=)\s*)\s*</string>
						<key>captures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>storage.modifier.php</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>variable.other.php</string>
							</dict>
							<key>3</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.variable.php</string>
							</dict>
							<key>4</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.assignment.php</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=,|\))</string>
						<key>name</key>
						<string>meta.function.argument.default.php</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#parameter-default-types</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>begin</key>
						<string>/\*</string>
						<key>captures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.php</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\*/</string>
						<key>name</key>
						<string>comment.block.php</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>(?i)\b(real|double|float|int(eger)?|bool(ean)?|string|class|clone|var|function|interface|parent|self|object)\b</string>
				<key>name</key>
				<string>storage.type.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>\b(global|abstract|const|extends|implements|final|p(r(ivate|otected)|ublic)|static)\b</string>
				<key>name</key>
				<string>storage.modifier.php</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#object</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.class.php</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>meta.function-call.static.php</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>variable.other.class.php</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.variable.php</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>constant.other.class.php</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(?x)(::)
                        (?:
        				    ([A-Za-z_][A-Za-z_0-9]*)\s*\(
        				    |
        				    ((\$+)[a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				    |
        				    ([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*)
        				)?</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#support</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>(&lt;&lt;&lt;)\s*([a-zA-Z_]+[a-zA-Z0-9_]*)</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.php</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.heredoc.php</string>
					</dict>
				</dict>
				<key>end</key>
				<string>^(\2)(;?)$</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.heredoc.php</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.string.php</string>
					</dict>
				</dict>
				<key>name</key>
				<string>string.unquoted.heredoc.php</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#interpolation</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>match</key>
				<string>=&gt;</string>
				<key>name</key>
				<string>keyword.operator.key.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>&amp;(?=\s*(\$|new|[A-Za-z_][A-Za-z_0-9]+(?=\s*\()))</string>
				<key>name</key>
				<string>storage.modifier.reference.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>;</string>
				<key>name</key>
				<string>punctuation.terminator.expression.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(@)</string>
				<key>name</key>
				<string>keyword.operator.error-control.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(\-\-|\+\+)</string>
				<key>name</key>
				<string>keyword.operator.increment-decrement.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(\-|\+|\*|/|%)</string>
				<key>name</key>
				<string>keyword.operator.arithmetic.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?i)(!|&amp;&amp;|\|\|)|\b(and|or|xor|as)\b</string>
				<key>name</key>
				<string>keyword.operator.logical.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>&lt;&lt;|&gt;&gt;|~|\^|&amp;|\|</string>
				<key>name</key>
				<string>keyword.operator.bitwise.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(===|==|!==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
				<key>name</key>
				<string>keyword.operator.comparison.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(\.=|\.)</string>
				<key>name</key>
				<string>keyword.operator.string.php</string>
			</dict>
			<dict>
				<key>match</key>
				<string>=</string>
				<key>name</key>
				<string>keyword.operator.assignment.php</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.type.php</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>support.class.php</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(?i)\b(instanceof)\b(?:\s+(\w+))?</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#numbers</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#strings</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#string-backtick</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#function-call</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#variables</string>
			</dict>
			<dict>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.php</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>variable.other.property.php</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(?&lt;=[a-zA-Z0-9_\x{7f}-\x{ff}])(-&gt;)([a-zA-Z_\x{7f}-\x{ff}][a-zA-Z0-9_\x{7f}-\x{ff}]*?)\b</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#instantiation</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#constants</string>
			</dict>
		</array>
	</dict>
	<key>deleted</key>
	<array/>
	<key>isDelta</key>
	<true/>
	<key>uuid</key>
	<string>22986475-8CA5-11D9-AEDD-000D93C8BE28</string>
</dict>
</plist>
